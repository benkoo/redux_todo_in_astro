---
import { cn } from '../lib/utils';
import resizeableConfig from '../features/resizeable.json';

const layoutNames = Object.keys(resizeableConfig.layouts);
---

<div class="flex flex-col h-screen bg-muted border-r border-neutral-200 dark:border-neutral-800 p-4">
  <h2 class="text-lg font-bold mb-6 text-center">Layouts</h2>
  <div class="flex-1 flex flex-col space-y-4">
    {layoutNames.map((layout, index) => (
      <button
        data-layout={layout}
        class={cn(
          "text-left px-4 py-2 rounded transition-colors duration-200",
          index === 0 
            ? "bg-primary text-primary-foreground" 
            : "hover:bg-muted-foreground/10 text-muted-foreground"
        )}
      >
        {layout.charAt(0).toUpperCase() + layout.slice(1)}
      </button>
    ))}
  </div>
</div>

<script define:vars={{ layoutNames }}>
  import { store } from '../store';

  // Add click handlers for layout buttons
  document.querySelectorAll('[data-layout]').forEach(button => {
    button.addEventListener('click', () => {
      const layout = button.getAttribute('data-layout');
      
      // Dispatch layout change to Redux store
      store.dispatch(changeLayout(layout));
      
      // Update button styles
      document.querySelectorAll('[data-layout]').forEach(btn => {
        btn.classList.remove('bg-primary', 'text-primary-foreground');
        btn.classList.add('hover:bg-muted-foreground/10', 'text-muted-foreground');
      });
      
      button.classList.remove('hover:bg-muted-foreground/10', 'text-muted-foreground');
      button.classList.add('bg-primary', 'text-primary-foreground');
    });
  });

  // Initialize active button based on current layout
  function updateActiveButton() {
    const state = store.getState();
    const currentLayout = state.resizeable?.currentLayout || layoutNames[0];
    
    const activeButton = document.querySelector(`[data-layout="${currentLayout}"]`);
    if (activeButton) {
      document.querySelectorAll('[data-layout]').forEach(btn => {
        btn.classList.remove('bg-primary', 'text-primary-foreground');
        btn.classList.add('hover:bg-muted-foreground/10', 'text-muted-foreground');
      });
      
      activeButton.classList.remove('hover:bg-muted-foreground/10', 'text-muted-foreground');
      activeButton.classList.add('bg-primary', 'text-primary-foreground');
    }
  }

  // Initial update
  updateActiveButton();

  // Subscribe to store changes to update button states
  store.subscribe(updateActiveButton);
</script>
